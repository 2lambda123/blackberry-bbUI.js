
<!DOCTYPE HTML PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN">
<!--
* Copyright 2010-2012 Research In Motion Limited.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
-->
<html> 
	<head>
		<meta name="x-blackberry-defaultHoverEffect" content="false" />
		<link  rel="stylesheet" type="text/css" href="bbui-0.9.5.css"><link />
		<script type="text/javascript" src="bbui-0.9.5.js"></script>
		<script type="text/javascript" src="js/webworks-1.0.2.9.js"></script>
		<script type="text/javascript">
			var rippleLoaded = false;
			document.addEventListener('webworksready', function(e) {
				// This is a hack for Ripple calling webworksready multiple times
				if (rippleLoaded) return;
				rippleLoaded = true;
				
				// For some fun I did some random color scheme generation :o)
				var highlightColor,
					randomNumber;
				randomNumber=Math.floor(Math.random()*100);
				if (randomNumber > 90) {
					  highlightColor = '#BA55D3';
				} else if (randomNumber > 60) {
					  highlightColor = '#00BC9F';
				} else if (randomNumber > 30) {
					  highlightColor = '#00A8DF';
				} else {
					highlightColor = '#B2CC00';
				}
				
				// You must call init on bbUI before any other code loads.  
				// If you want default functionality simply don't pass any parameters.. bb.init();
				bb.init({actionBarDark: true,
						controlsDark: true,
						listsDark: false,
						bb10ForPlayBook: true,
						highlightColor: highlightColor,
						// Fires "before" styling is applied and "before" the screen is inserted in the DOM
						onscreenready: function(element, id) {
											if (id == 'dataOnLoad') {
												dataOnLoad_initialLoad(element);
											} else if (id == 'masterDetail') {
												masterDetail_initialLoad(element);
											}
											
											// Remove all titles "except" input and pill buttons screen if running on BB10
											if (bb.device.isBB10 && (id != 'input') && (id != 'pillButtons') && (id != 'titlePillButtons')) {
												var titles = element.querySelectorAll('[data-bb-type=title]');
												if (titles.length > 0) {
													titles[0].parentNode.removeChild(titles[0]);
												}
											} 
											
											// Initialize our title pill buttons screen
											if (bb.device.isBB10 && (id == 'titlePillButtons')) {
												titlePillButtons_Init(element);
											}
											
										},
						// Fires "after" styling is applied and "after" the screen is inserted in the DOM
						ondomready: function(element, id) {
											if (id == 'dataOnTheFly') {
												dataOnTheFly_initialLoad(element);
											} 
										}
						});
				bb.pushScreen('menu.htm', 'menu');
			}, false);
		</script>
	</head>
	<body>
	</body>
</html>
